name: Rust

on:
  push:
    branches: [ master ]
  # If `Cargo.toml` is the only file to change, it's probably because this
  # action bumped the version, and we don't want this action to trigger a new
  # run of itself creating an infinite loop of version bumps. To solve, we
  # ignore changes to `Cargo.toml` for the purposes of the merge-to-master
  # action.
  paths-ignore: ["Cargo.toml"]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        components: rustfmt, clippy
    
    - name: Run cargo check
      uses: actions-rs/cargo@v1
      with:
        command: check
    - name: Run tests
      run: cargo test --verbose --features fail-on-warnings
    - name: Build docs
      run: cargo doc --verbose --features fail-on-warnings
    - name: Lint
      run: cargo clippy -- --deny "warnings"
    - name: Build
      run: cargo build --verbose --features fail-on-warnings --release
    - name: Bump version
      run: |
        cargo install cargo-bump
        cargo bump minor
        version="v$(cargo metadata --format-version 1 | jq -r '.packages[] | select(.name == "futhorc") | .version')""
        git commit -m "Bumped version to $version"
        git tag "$version"
        git push --atomic origin master "$version"
        mv target/release/futhorc futhorc-amd64-linux-$version
    - name: Pre-release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build"
        files: futhorc-amd64-linux-*
    - name: Publish
      run: cargo publish
